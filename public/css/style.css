html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:poppins;font-weight:400;font-style:normal;src:url(/assets/fonts/poppins-regular.woff) format("woff"),url(/assets/fonts/poppins-regular.woff2) format("woff2")}@font-face{font-family:poppins;font-weight:700;font-style:normal;src:url(/assets/fonts/poppins-bold.woff) format("woff"),url(/assets/fonts/poppins-bold.woff2) format("woff2")}@font-face{font-family:poppins;font-weight:500;font-style:normal;src:url(/assets/fonts/poppins-medium.woff) format("woff"),url(/assets/fonts/poppins-medium.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:poppins;font-size:100%;color:#2f2f2f;background-color:#f1f1f1}body{font-weight:400;padding:0;margin:0;text-rendering:optimizeLegibility}a{color:#121920;font-size:18px;text-decoration:none}a:active,a:hover{text-decoration:underline}a:active{opacity:.5}li{display:list-item}ul{margin-top:0;margin-bottom:0;list-style:none;padding:0}ul:not([class]){margin-bottom:1.25rem;padding-left:1.25rem}ul:not([class]) li{position:relative;padding-left:.9375rem;margin-bottom:.625rem}ul:not([class]) li:before{content:"";position:absolute;top:.625rem;left:0;display:block;width:5px;height:5px;border-radius:50%;background-color:currentColor}.header,.header__row{height:3.75rem}.header__row{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row}@media (min-width:1140px){.header__row{height:6.25rem}}.header__col--logo{position:relative;z-index:3;padding-right:1.25rem}.header__col--menu{position:fixed;top:-100%;left:0;width:100%;height:100%;overflow:auto;padding:90px 20px 20px;background-color:#e1e1e1}@media (min-width:1140px){.header__col--menu{position:relative;width:auto;height:auto;top:0;transition:none;background-color:#f1f1f1;z-index:2;padding:0}}.header__col--menu--active{top:0;transition:all .5s ease 0s}.header__col--burger{display:block;position:relative;width:30px;height:20px;cursor:pointer;z-index:3}.header__col--burger:after,.header__col--burger:before{position:absolute;width:100%;height:2px;left:0;content:"";background-color:#121920;transition:all .5s ease 0s}.header__col--burger:before{top:0}.header__col--burger:after{bottom:0}.header__col--burger span{position:absolute;background-color:#121920;width:100%;height:2px;top:9px;transition:all .5s ease 0s}.header__col--burger--active:before{transform:rotate(45deg);top:9px}.header__col--burger--active:after{transform:rotate(-45deg);bottom:9px}.header__col--burger--active span{transform:scale(0)}@media (min-width:1140px){.header__col--burger{display:none}}@media (min-width:1140px){.header{height:6.25rem}}.footer{height:15.625rem}@media (min-width:1140px){.footer{height:10.25rem}}.footer__row{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;text-align:center;-ms-flex-align:center;align-items:center;height:15.625rem}@media (min-width:1140px){.footer__row{-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;height:10.25rem}}.footer__col{padding:0 0 30px}@media (min-width:1140px){.footer__col:not(:last-child){padding-right:1.25rem}}.container{width:100%;max-width:71.875rem;margin-right:auto;margin-left:auto;padding-right:1.25rem;padding-left:1.25rem}.content__profile{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:8.3125rem}@media (min-width:1140px){.content__profile{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:justify;justify-content:space-between}}.content__info{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;padding:3.9375rem 4.0625rem;margin-bottom:6.25rem;border-radius:2.8125rem;background:#e9e9e9}@media (min-width:768px){.content__info{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}}.page{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.page__header{position:fixed;z-index:50;top:0;right:0;left:0;-ms-flex-negative:0;flex-shrink:0}.page__header:before{position:absolute;top:0;left:0;content:"";width:100%;height:100%;z-index:2;background-color:#f1f1f1}.page__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-positive:1;flex-grow:1;padding-top:.625rem;margin-top:3.75rem}@media (min-width:768px){.page__content{padding-top:1.25rem}}@media (min-width:1140px){.page__content{padding-top:2.625rem;margin-top:6.25rem}}.page__footer{-ms-flex-negative:0;flex-shrink:0}.logo__link{font-weight:700;font-size:1.375rem;line-height:2.0625rem}.logo__link--title{font-weight:500;font-size:2.25rem;line-height:2.875rem}.menu__list{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:1140px){.menu__list{-ms-flex-direction:row;flex-direction:row}}.menu__item{margin:0 0 2.5rem}@media (min-width:1140px){.menu__item{margin:0 0 0 2.5rem}}.menu__link{font-weight:500;font-size:36px;line-height:24px;transition:all .5s ease 0s}@media (min-width:1140px){.menu__link{font-weight:500;font-size:16px;line-height:24px}}.menu__link--active{color:#eebf63}.menu__link:hover{text-decoration:none;opacity:.6;transition:all .5s ease 0s}.icons__list{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0}.icons__item{margin:.625rem .625rem 0}.icon{width:100%;height:100%}.icon--white{fill:#fff}.icon--black{fill:#2f2f2f}.social__list{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.social__pic{fill:#676767}.social__item{transition:all .5s ease 0s}.social__item:not(:last-child){padding:0 1.5625rem 0 0}.social__item:hover{opacity:.6}.social__link{display:block;width:2rem;height:2rem}.heading{margin:0}.heading--huge{font-weight:600;font-size:48px;line-height:62px}.heading--large{font-weight:500;font-size:36px;line-height:46px}.heading--big{font-size:24px;line-height:45px}.heading--normal{font-size:18px;line-height:30px}.heading--gray{color:#828282}.buttons__list{margin-left:0;padding-left:0;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.buttons__item{margin-right:1.25rem;margin-bottom:1.25rem}.button{font-weight:700;font-size:16px;line-height:24px;border-style:none;position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;padding:1rem 2.0625rem;border-radius:10px;color:#fff;transition:all .5s ease 0s;cursor:pointer}.button--fill{background-color:#eebf63}.button--border{background-color:transparent;border:2px solid #fff}.button--simple{color:#2f2f2f;background-color:#fff;border:2px solid #eebf63}.button--cover{font-weight:500;font-size:24px;line-height:36px;background-color:transparent;color:#2f2f2f;padding:0}.button:hover{opacity:.6}.button__icon{-ms-flex-negative:0;flex-shrink:0;width:1.5625rem;height:1.5625rem;margin-right:1rem}.button__icon:last-child{margin-right:0}.button__icon--right{-ms-flex-order:1;order:1;margin-right:0;margin-left:1rem}.form{font-size:1.125rem;width:100%}.form__row{padding-bottom:1.875rem;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.form__row:last-child{padding:0}.form__field-block{padding-bottom:.1875rem}.input{position:relative}.input__control{font-size:1.125rem;line-height:1.875rem;display:block;width:100%;height:3.75rem;padding:0 1.875rem;color:#828282;border-radius:10px;background-color:#fff;border:none}.input__control:focus{outline:none;border:.0625rem solid #828282}.input--textarea .input__control{height:7.5rem;padding:1rem 1.875rem;resize:none;-ms-overflow-style:none;scrollbar-width:none}.input--textarea .input__control::-webkit-scrollbar{width:0;background:transparent}.cards__list{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:-1.25rem;margin-right:-.3125rem;margin-left:-.3125rem}@media (min-width:768px){.cards__list{margin-right:-.9375rem;margin-left:-.9375rem}}@media (min-width:1140px){.cards__list{margin-top:-1.875rem;margin-right:-1.5625rem;margin-left:-1.5625rem}}.cards__item{margin-top:1.25rem;width:100%;width:50%;padding-left:.3125rem;padding-right:.3125rem}@media (min-width:768px){.cards__item{width:33.33333%;padding-left:.9375rem;padding-right:.9375rem}}@media (min-width:1140px){.cards__item{width:25%;margin-top:1.875rem;padding-left:1.5625rem;padding-right:1.5625rem}}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:100%}.card__image{position:relative;width:100%;margin-bottom:1.6875rem;overflow:hidden;border-radius:45px}.card__image:before{content:"";display:block;padding-top:130.96234%}.card__image-pic{width:100%;height:100%;object-fit:cover;font-family:"object-fit: cover"}.card__box,.card__image-pic{position:absolute;top:0;right:0;bottom:0;left:0}.card__body{position:static;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;text-align:center;width:100%;max-height:100%}.card__title{font-weight:500;font-size:24px;line-height:36px;padding-bottom:.4375rem}.bigcards__list{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:1.25rem;margin-right:-.9375rem;margin-left:-.9375rem}.bigcards__item{margin-top:1.25rem;width:100%;padding-left:.9375rem;padding-right:.9375rem}@media (min-width:1140px){.bigcards__item{width:50%}}.bigcard{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-bottom:6.25rem}.bigcard__image{position:relative;width:100%;margin-bottom:1.6875rem;overflow:hidden;border-radius:25px}.bigcard__image-min{max-height:23.75rem}.bigcard__image-min img{object-position:bottom}.bigcard__image:before{content:"";display:block;padding-top:130.96234%}.bigcard__image-pic{width:100%;height:100%;object-fit:cover;font-family:"object-fit: cover"}.bigcard__box,.bigcard__image-pic{position:absolute;top:0;right:0;bottom:0;left:0}.bigcard__title{font-weight:600;font-size:24px;line-height:36px;margin-bottom:.625rem}.bigcard__text{font-weight:500;font-size:16px;line-height:24px;-ms-flex-direction:row;flex-direction:row}.bigcard__info,.bigcard__text{display:-ms-flexbox;display:flex}.bigcard__info{-ms-flex-align:center;align-items:center}.bigcard__info:not(:last-child){margin-right:3.125rem}.bigcard__icon{margin-right:.8125rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.bigcard__icon-pic{width:1.125rem;height:1.125rem}.tabs{transition:all .5s ease 0s}.tabs__list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.tabs__item{position:relative;font-weight:600;font-size:2rem;line-height:3.375rem;margin-bottom:3.125rem;transition:all .5s ease 0s;cursor:pointer;color:#828282}.tabs__item--active{color:#eebf63;transition:all .5s ease 0s}.tabs__item--active:after{position:absolute;bottom:-.75rem;left:0;width:100%;height:.125rem;content:"";border:4px solid #eebf63}.tabs__item:hover{opacity:.5}.tabs__item+.tabs__item{margin-left:5rem}.tabs__block{display:none}.tabs__block--active{display:block}.project__content{padding-top:2.5rem}.project__content,.project__tabs{padding-bottom:3.125rem}.project__mail{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:3.125rem 4.6875rem;border-radius:25px;background-color:#eebf63}.project__title{font-size:48px;font-weight:600;line-height:62px;max-width:29.375rem;color:#fff}.profile__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;text-align:center;-ms-flex:1 1 100%;flex:1 1 100%;padding:0;-ms-flex-order:1;order:1}@media (min-width:1140px){.profile__content{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;text-align:start;max-width:33.75rem;padding-right:5rem;-ms-flex-order:0;order:0}}.profile__image-pic{width:100%;height:auto;max-width:34.5625rem}.profile__title{padding:.625rem 0 2rem}@media (min-width:1140px){.profile__title{padding:1rem 0 3.5rem}}.profile__follow{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;width:200px;margin-top:2.0625rem}@media (min-width:1140px){.profile__follow{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:start;justify-content:flex-start;width:100%}}.profile__text{margin-right:0}@media (min-width:1140px){.profile__text{margin-right:1.875rem}}.profile__icon{height:32px;width:32px;fill:#828282}.profile__icon:not(:last-child){margin-right:1.875rem}.profile__button{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;width:250px;margin-top:1.25rem}@media (min-width:768px){.profile__button{width:100%}}@media (min-width:1140px){.profile__button{-ms-flex-pack:start;justify-content:flex-start}}.profile__btn:not(:last-child){margin-bottom:1.875rem}@media (min-width:768px){.profile__btn{margin-bottom:0}.profile__btn:not(:last-child){margin-right:1.875rem}}.profile--orange{color:#eebf63}.rings__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-right:0}@media (min-width:768px){.rings__content:not(:last-child){margin-right:3.0625rem}}.rings__number{font-size:72px;font-weight:600;line-height:62px}.rings__text{color:#828282}.rings--blue{color:#8ed2a9}.info__image{position:relative;border-radius:1.875rem;margin-bottom:1.875rem}@media (min-width:768px){.info__image{margin-right:3.75rem;margin-bottom:0}}.info__image-pic{width:100%;height:auto;max-width:21.875rem;min-width:15.625rem}.info__content{width:100%}@media (min-width:768px){.info__content{width:100%}}@media (min-width:1140px){.info__content{max-width:570px}}.info__title{margin-bottom:1.1875rem}.info__rings{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;margin-bottom:1.875rem}@media (min-width:768px){.info__rings{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:start;align-items:flex-start}}@media (min-width:1140px){.info__rings{margin-bottom:4.375rem}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcbm9kZV9tb2R1bGVzXFxub3JtYWxpemUuY3NzXFxub3JtYWxpemUuY3NzIiwic3R5bGUuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxiYXNlXFxfZm9udHMuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxhYnN0cmFjdHNcXF92YXJpYWJsZXMuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxiYXNlXFxfZ2VuZXJpYy5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGFic3RyYWN0c1xcX2Z1bmN0aW9ucy5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGJsb2Nrc1xcX2hlYWRlci5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGJsb2Nrc1xcX2Zvb3Rlci5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGJsb2Nrc1xcX2NvbnRhaW5lci5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGJsb2Nrc1xcX2NvbnRlbnQuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxibG9ja3NcXF9wYWdlLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX2xvZ28uc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfbWVudS5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9pY29ucy5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9pY29uLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX3NvY2lhbC5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9oZWFkaW5nLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX2J1dHRvbnMuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfYnV0dG9uLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX2Zvcm0uc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfaW5wdXQuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfY2FyZHMuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfY2FyZC5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9iaWdjYXJkcy5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9iaWdjYXJkLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX3RhYnMuc2NzcyIsIkM6XFxVc2Vyc1xcUENcXERvY3VtZW50c1xcMC5BbGxcXDEuRnJvbnRlbmRcXNCS0LXRgNGB0YLQutCwXFwzX01pbmlmeVxcYXNzZXRzXFxzY3NzXFxjb21wb25lbnRzXFxfcHJvamVjdC5zY3NzIiwiQzpcXFVzZXJzXFxQQ1xcRG9jdW1lbnRzXFwwLkFsbFxcMS5Gcm9udGVuZFxc0JLQtdGA0YHRgtC60LBcXDNfTWluaWZ5XFxhc3NldHNcXHNjc3NcXGNvbXBvbmVudHNcXF9wcm9maWxlLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX3JpbmdzLnNjc3MiLCJDOlxcVXNlcnNcXFBDXFxEb2N1bWVudHNcXDAuQWxsXFwxLkZyb250ZW5kXFzQktC10YDRgdGC0LrQsFxcM19NaW5pZnlcXGFzc2V0c1xcc2Nzc1xcY29tcG9uZW50c1xcX2luZm8uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVQSxLQUNFLGdCQUFpQixDQUNqQiw2QkFBdUMsQ0FrQnpDLEtBQ0UsYUFBYyxDQVFoQixHQUNFLGFBQWMsQ0FDZCxjQUFnQixDQVdsQixHQUNFLHNCQUF1QixDQUN2QixRQUFTLENBQ1QsZ0JBQTBCLENBUTVCLElBQ0UsK0JBQWlDLENBQ2pDLGFBQXVCLENBVXpCLEVBQ0UsNEJBQTZCLENBUS9CLFlBQ0Usa0JBQW1CLENBQ25CLHlCQUEwQixDQUMxQixnQ0FBMEMsQ0FPNUMsU0FFRSxrQkFBbUIsQ0FRckIsY0FHRSwrQkFBaUMsQ0FDakMsYUFBdUIsQ0FPekIsTUFDRSxhQUFjLENBUWhCLFFBRUUsYUFBYyxDQUNkLGFBQWMsQ0FDZCxpQkFBa0IsQ0FDbEIsdUJBQXdCLENB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Q0FDbkIsc0J4Qi9CNkIsQ3dCaUM3Qix5QkFOSixhQU9RLHNCQUFtQixDQUFuQixrQkFBbUIsQ0FDbkIsb0JBQXVCLENBQXZCLHNCQUF1QixDQU05QixDQUhHLDBCQVhKLGFBWVEsc0J4QnZDeUIsQ3dCeUNoQyIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqXHJcbiogVmVuZG9yc1xyXG4qL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxyXG4qIEFic3RyYWN0c1xyXG4qL1xuLyoqXHJcbiogQ29sb3JzXHJcbipcclxuKiDQndCw0LfQstCw0L3QuNC1INC/0LXRgNC10LzQtdC90L3QvtC5INC60L7QvdC60YDQtdGC0L3QvtCz0L4g0YbQstC10YLQsCDQs9C10L3QtdGA0LjRgNGD0LXRgtGB0Y8g0YfQtdGA0LXQtyDRgdC10YDQstC40YE6IGh0dHA6Ly9jaGlyLmFnL3Byb2plY3RzL25hbWUtdGhhdC1jb2xvci8uXHJcbiog0JfQvdCw0YfQtdC90LjQtSDRhtCy0LXRgtCwINCy0YHQtdCz0LTQsCDRg9C60LDQt9GL0LLQsNC10YLRgdGPINCyIEhFWC3RhNC+0YDQvNCw0YLQtSDQsiDQvdC40LbQvdC10Lwg0YDQtdCz0LjRgdGC0YDQtSAo0LrRgNC+0LzQtSDQuNGB0LrQu9GO0YfQuNGC0LXQu9GM0L3Ri9GFINGB0LvRg9GH0LDQtdCyKS5cclxuKi9cbi8qKlxyXG4qIEZvbnRzXHJcbiovXG4vKipcclxuKiBCcmVha3BvaW50c1xyXG4qL1xuLyoqXHJcbiogTGF5b3V0XHJcbiovXG4vKipcclxuKiBTaXplc1xyXG4qL1xuLyoqXHJcbiogVHJhbnNpdGlvbnMgYW5kIEFuaW1hdGlvbnNcclxuKi9cbi8qKlxyXG4qIFJhZGl1c1xyXG4qL1xuLyoqXHJcbiogQm94LXNoYWRvd3NcclxuKi9cbi8qKlxyXG4qIFotaW5kZXhlc1xyXG4qL1xuLyoqXHJcbiogQmFzZVxyXG4qL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvL3BvcHBpbnMtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvL3BvcHBpbnMtcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy8vcG9wcGlucy1ib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy8vcG9wcGlucy1ib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zXCI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzLy9wb3BwaW5zLW1lZGl1bS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvL3BvcHBpbnMtbWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpOyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gICo6OmJlZm9yZSwgKjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNcIjtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBjb2xvcjogIzJmMmYyZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTsgfVxuXG5ib2R5IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmEge1xuICBjb2xvcjogIzEyMTkyMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYTphY3RpdmUge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5saSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG51bCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cbiAgdWw6bm90KFtjbGFzc10pIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMS4yNXJlbTsgfVxuICAgIHVsOm5vdChbY2xhc3NdKSBsaSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDAuOTM3NXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgICB1bDpub3QoW2NsYXNzXSkgbGk6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwLjYyNXJlbTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgIGhlaWdodDogNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuXG4vKlxyXG4qIENvbXBvbmVudHNcclxuKi9cbi5oZWFkZXIge1xuICBoZWlnaHQ6IDMuNzVyZW07IH1cbiAgLmhlYWRlcl9fcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMy43NXJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgICAgLmhlYWRlcl9fcm93IHtcbiAgICAgICAgaGVpZ2h0OiA2LjI1cmVtOyB9IH1cbiAgLmhlYWRlcl9fY29sLS1sb2dvIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMztcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjI1cmVtOyB9XG4gIC5oZWFkZXJfX2NvbC0tbWVudSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogLTEwMCU7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgcGFkZGluZzogOTBweCAyMHB4IDIwcHggMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlMWUxOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgICAgLmhlYWRlcl9fY29sLS1tZW51IHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogaW5pdGlhbDtcbiAgICAgICAgaGVpZ2h0OiBpbml0aWFsO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHRyYW5zaXRpb246IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAgIC5oZWFkZXJfX2NvbC0tbWVudS0tYWN0aXZlIHtcbiAgICAgIHRvcDogMDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7IH1cbiAgLmhlYWRlcl9fY29sLS1idXJnZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHotaW5kZXg6IDM7IH1cbiAgICAuaGVhZGVyX19jb2wtLWJ1cmdlcjo6YWZ0ZXIsIC5oZWFkZXJfX2NvbC0tYnVyZ2VyOjpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjE5MjA7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzOyB9XG4gICAgLmhlYWRlcl9fY29sLS1idXJnZXI6OmJlZm9yZSB7XG4gICAgICB0b3A6IDA7IH1cbiAgICAuaGVhZGVyX19jb2wtLWJ1cmdlcjo6YWZ0ZXIge1xuICAgICAgYm90dG9tOiAwOyB9XG4gICAgLmhlYWRlcl9fY29sLS1idXJnZXIgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTIwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIHRvcDogOXB4O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwczsgfVxuICAgIC5oZWFkZXJfX2NvbC0tYnVyZ2VyLS1hY3RpdmU6OmJlZm9yZSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICB0b3A6IDlweDsgfVxuICAgIC5oZWFkZXJfX2NvbC0tYnVyZ2VyLS1hY3RpdmU6OmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICBib3R0b206IDlweDsgfVxuICAgIC5oZWFkZXJfX2NvbC0tYnVyZ2VyLS1hY3RpdmUgc3BhbiB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDApOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgICAgLmhlYWRlcl9fY29sLS1idXJnZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgIC5oZWFkZXIge1xuICAgICAgaGVpZ2h0OiA2LjI1cmVtOyB9IH1cblxuLmZvb3RlciB7XG4gIGhlaWdodDogMTUuNjI1cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgIGhlaWdodDogMTAuMjVyZW07IH0gfVxuICAuZm9vdGVyX19yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDE1LjYyNXJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAgIC5mb290ZXJfX3JvdyB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgaGVpZ2h0OiAxMC4yNXJlbTsgfSB9XG4gIC5mb290ZXJfX2NvbCB7XG4gICAgcGFkZGluZzogMHB4IDBweCAzMHB4IDBweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAgIC5mb290ZXJfX2NvbDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMS4yNXJlbTsgfSB9XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA3MS44NzVyZW07XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IDEuMjVyZW07XG4gIHBhZGRpbmctbGVmdDogMS4yNXJlbTsgfVxuXG4uY29udGVudF9fcHJvZmlsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDguMzEyNXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLmNvbnRlbnRfX3Byb2ZpbGUge1xuICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH0gfVxuXG4uY29udGVudF9faW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDMuOTM3NXJlbSA0LjA2MjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDYuMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDIuODEyNXJlbTtcbiAgYmFja2dyb3VuZDogI0U5RTlFOTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY29udGVudF9faW5mbyB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH0gfVxuXG4ucGFnZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi1oZWlnaHQ6IDEwMHZoOyB9XG4gIC5wYWdlX19oZWFkZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiA1MDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBmbGV4LXNocmluazogMDsgfVxuICAgIC5wYWdlX19oZWFkZXI6OmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxOyB9XG4gIC5wYWdlX19jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmctdG9wOiAwLjYyNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAzLjc1cmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAucGFnZV9fY29udGVudCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAxLjI1cmVtOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgICAucGFnZV9fY29udGVudCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyLjYyNXJlbTtcbiAgICAgICAgbWFyZ2luLXRvcDogNi4yNXJlbTsgfSB9XG4gIC5wYWdlX19mb290ZXIge1xuICAgIGZsZXgtc2hyaW5rOiAwOyB9XG5cbi5sb2dvX19saW5rIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDIuMDYyNXJlbTsgfVxuICAubG9nb19fbGluay0tdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyLjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjg3NXJlbTsgfVxuXG4ubWVudV9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgIC5tZW51X19saXN0IHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7IH0gfVxuXG4ubWVudV9faXRlbSB7XG4gIG1hcmdpbjogMHB4IDBweCAyLjVyZW0gMHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAubWVudV9faXRlbSB7XG4gICAgICBtYXJnaW46IDBweCAwcHggMHB4IDIuNXJlbTsgfSB9XG5cbi5tZW51X19saW5rIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwczsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLm1lbnVfX2xpbmsge1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4OyB9IH1cbiAgLm1lbnVfX2xpbmstLWFjdGl2ZSB7XG4gICAgY29sb3I6ICNlZWJmNjM7IH1cbiAgLm1lbnVfX2xpbms6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBvcGFjaXR5OiAuNjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzOyB9XG5cbi5pY29uc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5pY29uc19faXRlbSB7XG4gIG1hcmdpbjogMC42MjVyZW0gMC42MjVyZW0gMHB4IDAuNjI1cmVtOyB9XG5cbi5pY29uIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuICAuaWNvbi0td2hpdGUge1xuICAgIGZpbGw6ICNmZmZmZmY7IH1cbiAgLmljb24tLWJsYWNrIHtcbiAgICBmaWxsOiAjMmYyZjJmOyB9XG5cbi5zb2NpYWxfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XG5cbi5zb2NpYWxfX3BpYyB7XG4gIGZpbGw6ICM2NzY3Njc7IH1cblxuLnNvY2lhbF9faXRlbSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7IH1cbiAgLnNvY2lhbF9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBwYWRkaW5nOiAwcHggMS41NjI1cmVtIDBweCAwcHg7IH1cbiAgLnNvY2lhbF9faXRlbTpob3ZlciB7XG4gICAgb3BhY2l0eTogLjY7IH1cblxuLnNvY2lhbF9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtOyB9XG5cbi5oZWFkaW5nIHtcbiAgbWFyZ2luOiAwOyB9XG4gIC5oZWFkaW5nLS1odWdlIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgICBsaW5lLWhlaWdodDogNjJweDsgfVxuICAuaGVhZGluZy0tbGFyZ2Uge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiA0NnB4OyB9XG4gIC5oZWFkaW5nLS1iaWcge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogNDVweDsgfVxuICAuaGVhZGluZy0tbm9ybWFsIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7IH1cbiAgLmhlYWRpbmctLWdyYXkge1xuICAgIGNvbG9yOiAjODI4MjgyOyB9XG5cbi5idXR0b25zX19saXN0IHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwOyB9XG5cbi5idXR0b25zX19pdGVtIHtcbiAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtOyB9XG5cbi5idXR0b24ge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1pbi13aWR0aDogMDtcbiAgcGFkZGluZzogMXJlbSAyLjA2MjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLmJ1dHRvbi0tZmlsbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlYmY2MzsgfVxuICAuYnV0dG9uLS1ib3JkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7IH1cbiAgLmJ1dHRvbi0tc2ltcGxlIHtcbiAgICBjb2xvcjogIzJmMmYyZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNlZWJmNjM7IH1cbiAgLmJ1dHRvbi0tY292ZXIge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiAjMmYyZjJmO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLmJ1dHRvbjpob3ZlciB7XG4gICAgb3BhY2l0eTogLjY7IH1cbiAgLmJ1dHRvbl9faWNvbiB7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgd2lkdGg6IDEuNTYyNXJlbTtcbiAgICBoZWlnaHQ6IDEuNTYyNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDFyZW07IH1cbiAgICAuYnV0dG9uX19pY29uOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gICAgLmJ1dHRvbl9faWNvbi0tcmlnaHQge1xuICAgICAgb3JkZXI6IDE7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTsgfVxuXG4uZm9ybSB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5mb3JtX19yb3cge1xuICAgIHBhZGRpbmctYm90dG9tOiAxLjg3NXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAuZm9ybV9fcm93Omxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZzogMDsgfVxuICAuZm9ybV9fZmllbGQtYmxvY2sge1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjE4NzVyZW07IH1cblxuLmlucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5pbnB1dF9fY29udHJvbCB7XG4gICAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS44NzVyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzLjc1cmVtO1xuICAgIHBhZGRpbmc6IDBweCAxLjg3NXJlbTtcbiAgICBjb2xvcjogIzgyODI4MjtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgYm9yZGVyOiBub25lOyB9XG4gICAgLmlucHV0X19jb250cm9sOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCAjODI4MjgyOyB9XG4gIC5pbnB1dC0tdGV4dGFyZWEgLmlucHV0X19jb250cm9sIHtcbiAgICBoZWlnaHQ6IDcuNXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtIDEuODc1cmVtO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyB9XG4gICAgLmlucHV0LS10ZXh0YXJlYSAuaW5wdXRfX2NvbnRyb2w6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cblxuLmNhcmRzX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tdG9wOiAtMS4yNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAtMC4zMTI1cmVtO1xuICBtYXJnaW4tbGVmdDogLTAuMzEyNXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY2FyZHNfX2xpc3Qge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAtMC45Mzc1cmVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IC0wLjkzNzVyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLmNhcmRzX19saXN0IHtcbiAgICAgIG1hcmdpbi10b3A6IC0xLjg3NXJlbTtcbiAgICAgIG1hcmdpbi1yaWdodDogLTEuNTYyNXJlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMS41NjI1cmVtOyB9IH1cblxuLmNhcmRzX19pdGVtIHtcbiAgbWFyZ2luLXRvcDogMS4yNXJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiA1MCU7XG4gIHBhZGRpbmctbGVmdDogMC4zMTI1cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjMxMjVyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmNhcmRzX19pdGVtIHtcbiAgICAgIHdpZHRoOiAzMy4zMzMzMyU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDAuOTM3NXJlbTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDAuOTM3NXJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAuY2FyZHNfX2l0ZW0ge1xuICAgICAgd2lkdGg6IDI1JTtcbiAgICAgIG1hcmdpbi10b3A6IDEuODc1cmVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxLjU2MjVyZW07XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxLjU2MjVyZW07IH0gfVxuXG4uY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5jYXJkX19pbWFnZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDEuNjg3NXJlbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJvcmRlci1yYWRpdXM6IDQ1cHg7IH1cbiAgICAuY2FyZF9faW1hZ2U6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXRvcDogMTMwLjk2MjM0JTsgfVxuICAgIC5jYXJkX19pbWFnZS1waWMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyXCI7IH1cbiAgLmNhcmRfX2JveCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDsgfVxuICAuY2FyZF9fYm9keSB7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7IH1cbiAgLmNhcmRfX3RpdGxlIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMC40Mzc1cmVtOyB9XG5cbi5iaWdjYXJkc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLXRvcDogMS4yNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAtMC45Mzc1cmVtO1xuICBtYXJnaW4tbGVmdDogLTAuOTM3NXJlbTsgfVxuXG4uYmlnY2FyZHNfX2l0ZW0ge1xuICBtYXJnaW4tdG9wOiAxLjI1cmVtO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAwLjkzNzVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuOTM3NXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLmJpZ2NhcmRzX19pdGVtIHtcbiAgICAgIHdpZHRoOiA1MCU7IH0gfVxuXG4uYmlnY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLWJvdHRvbTogNi4yNXJlbTsgfVxuICAuYmlnY2FyZF9faW1hZ2Uge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjY4NzVyZW07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4OyB9XG4gICAgLmJpZ2NhcmRfX2ltYWdlLW1pbiB7XG4gICAgICBtYXgtaGVpZ2h0OiAyMy43NXJlbTsgfVxuICAgICAgLmJpZ2NhcmRfX2ltYWdlLW1pbiBpbWcge1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IGJvdHRvbTsgfVxuICAgIC5iaWdjYXJkX19pbWFnZTo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctdG9wOiAxMzAuOTYyMzQlOyB9XG4gICAgLmJpZ2NhcmRfX2ltYWdlLXBpYyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXJcIjsgfVxuICAuYmlnY2FyZF9fYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwOyB9XG4gIC5iaWdjYXJkX190aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgLmJpZ2NhcmRfX3RleHQge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxuICAuYmlnY2FyZF9faW5mbyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLmJpZ2NhcmRfX2luZm86bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDMuMTI1cmVtOyB9XG4gIC5iaWdjYXJkX19pY29uIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuODEyNXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAuYmlnY2FyZF9faWNvbi1waWMge1xuICAgICAgd2lkdGg6IDEuMTI1cmVtO1xuICAgICAgaGVpZ2h0OiAxLjEyNXJlbTsgfVxuXG4udGFicyB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7IH1cbiAgLnRhYnNfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAudGFic19faXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAzLjM3NXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAzLjEyNXJlbTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjb2xvcjogIzgyODI4MjsgfVxuICAgIC50YWJzX19pdGVtLS1hY3RpdmUge1xuICAgICAgY29sb3I6ICNlZWJmNjM7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzOyB9XG4gICAgICAudGFic19faXRlbS0tYWN0aXZlOjphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAtMC43NXJlbTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMC4xMjVyZW07XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJvcmRlcjogNHB4IHNvbGlkICNFRUJGNjM7IH1cbiAgICAudGFic19faXRlbTpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAuNTsgfVxuICAgIC50YWJzX19pdGVtICsgLnRhYnNfX2l0ZW0ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDVyZW07IH1cbiAgLnRhYnNfX2Jsb2NrIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLnRhYnNfX2Jsb2NrLS1hY3RpdmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cblxuLnByb2plY3RfX2NvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogMi41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMy4xMjVyZW07IH1cblxuLnByb2plY3RfX3RhYnMge1xuICBwYWRkaW5nLWJvdHRvbTogMy4xMjVyZW07IH1cblxuLnByb2plY3RfX21haWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDMuMTI1cmVtIDQuNjg3NXJlbTtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFQkY2MzsgfVxuXG4ucHJvamVjdF9fdGl0bGUge1xuICBmb250LXNpemU6IDQ4cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiA2MnB4O1xuICBtYXgtd2lkdGg6IDI5LjM3NXJlbTtcbiAgY29sb3I6ICNmZmZmZmY7IH1cblxuLnByb2ZpbGVfX2NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZsZXg6IDEgMSAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICBvcmRlcjogMTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLnByb2ZpbGVfX2NvbnRlbnQge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgICBtYXgtd2lkdGg6IDMzLjc1cmVtO1xuICAgICAgcGFkZGluZy1yaWdodDogNXJlbTtcbiAgICAgIG9yZGVyOiAwOyB9IH1cblxuLnByb2ZpbGVfX2ltYWdlLXBpYyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMzQuNTYyNXJlbTsgfVxuXG4ucHJvZmlsZV9fdGl0bGUge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcHggMnJlbSAwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgIC5wcm9maWxlX190aXRsZSB7XG4gICAgICBwYWRkaW5nOiAxcmVtIDBweCAzLjVyZW0gMHB4OyB9IH1cblxuLnByb2ZpbGVfX2ZvbGxvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAyMDBweDtcbiAgbWFyZ2luLXRvcDogMi4wNjI1cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAucHJvZmlsZV9fZm9sbG93IHtcbiAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4ucHJvZmlsZV9fdGV4dCB7XG4gIG1hcmdpbi1yaWdodDogMHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAucHJvZmlsZV9fdGV4dCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuODc1cmVtOyB9IH1cblxuLnByb2ZpbGVfX2ljb24ge1xuICBoZWlnaHQ6IDMycHg7XG4gIHdpZHRoOiAzMnB4O1xuICBmaWxsOiAjODI4MjgyOyB9XG4gIC5wcm9maWxlX19pY29uOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1yaWdodDogMS44NzVyZW07IH1cblxuLnByb2ZpbGVfX2J1dHRvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAyNTBweDtcbiAgbWFyZ2luLXRvcDogMS4yNXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAucHJvZmlsZV9fYnV0dG9uIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNDBweCkge1xuICAgIC5wcm9maWxlX19idXR0b24ge1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9IH1cblxuLnByb2ZpbGVfX2J0bjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMS44NzVyZW07IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wcm9maWxlX19idG4ge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAucHJvZmlsZV9fYnRuOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxLjg3NXJlbTsgfSB9XG5cbi5wcm9maWxlLS1vcmFuZ2Uge1xuICBjb2xvcjogI2VlYmY2MzsgfVxuXG4ucmluZ3NfX2NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLnJpbmdzX19jb250ZW50Om5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAzLjA2MjVyZW07IH0gfVxuXG4ucmluZ3NfX251bWJlciB7XG4gIGZvbnQtc2l6ZTogNzJweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDYycHg7IH1cblxuLnJpbmdzX190ZXh0IHtcbiAgY29sb3I6ICM4MjgyODI7IH1cblxuLnJpbmdzLS1ibHVlIHtcbiAgY29sb3I6ICM4RUQyQTk7IH1cblxuLmluZm9fX2ltYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAxLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS44NzVyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmluZm9fX2ltYWdlIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMy43NXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuICAuaW5mb19faW1hZ2UtcGljIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAyMS44NzVyZW07XG4gICAgbWluLXdpZHRoOiAxNS42MjVyZW07IH1cblxuLmluZm9fX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuaW5mb19fY29udGVudCB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAuaW5mb19fY29udGVudCB7XG4gICAgICBtYXgtd2lkdGg6IDU3MHB4OyB9IH1cblxuLmluZm9fX3RpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4xODc1cmVtOyB9XG5cbi5pbmZvX19yaW5ncyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEuODc1cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5pbmZvX19yaW5ncyB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE0MHB4KSB7XG4gICAgLmluZm9fX3JpbmdzIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDQuMzc1cmVtOyB9IH1cbiIsIkBmb250LWZhY2Uge1xyXG4gICAgJGZvbnQtbmFtZTogXCJwb3BwaW5zLXJlZ3VsYXJcIjtcclxuICAgIGZvbnQtZmFtaWx5OiBcIiN7JGZvbnQtZmFtaWx5LWN1c3RvbX1cIjtcclxuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtcmVndWxhcjtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIHNyYzogdXJsKFwiI3skZm9udC1wYXRofS8jeyRmb250LW5hbWV9LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcclxuICAgICAgICAgdXJsKFwiI3skZm9udC1wYXRofS8jeyRmb250LW5hbWV9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgICRmb250LW5hbWU6IFwicG9wcGlucy1ib2xkXCI7XHJcbiAgICBmb250LWZhbWlseTogXCIjeyRmb250LWZhbWlseS1jdXN0b219XCI7XHJcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJvbGQ7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBzcmM6IHVybChcIiN7JGZvbnQtcGF0aH0vI3skZm9udC1uYW1lfS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksXHJcbiAgICAgICAgIHVybChcIiN7JGZvbnQtcGF0aH0vI3skZm9udC1uYW1lfS53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICAkZm9udC1uYW1lOiBcInBvcHBpbnMtbWVkaXVtXCI7XHJcbiAgICBmb250LWZhbWlseTogXCIjeyRmb250LWZhbWlseS1jdXN0b219XCI7XHJcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW1lZGl1bTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIHNyYzogdXJsKFwiI3skZm9udC1wYXRofS8jeyRmb250LW5hbWV9LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcclxuICAgICAgICAgdXJsKFwiI3skZm9udC1wYXRofS8jeyRmb250LW5hbWV9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xyXG59IiwiLyoqXHJcbiogQ29sb3JzXHJcbipcclxuKiDQndCw0LfQstCw0L3QuNC1INC/0LXRgNC10LzQtdC90L3QvtC5INC60L7QvdC60YDQtdGC0L3QvtCz0L4g0YbQstC10YLQsCDQs9C10L3QtdGA0LjRgNGD0LXRgtGB0Y8g0YfQtdGA0LXQtyDRgdC10YDQstC40YE6IGh0dHA6Ly9jaGlyLmFnL3Byb2plY3RzL25hbWUtdGhhdC1jb2xvci8uXHJcbiog0JfQvdCw0YfQtdC90LjQtSDRhtCy0LXRgtCwINCy0YHQtdCz0LTQsCDRg9C60LDQt9GL0LLQsNC10YLRgdGPINCyIEhFWC3RhNC+0YDQvNCw0YLQtSDQsiDQvdC40LbQvdC10Lwg0YDQtdCz0LjRgdGC0YDQtSAo0LrRgNC+0LzQtSDQuNGB0LrQu9GO0YfQuNGC0LXQu9GM0L3Ri9GFINGB0LvRg9GH0LDQtdCyKS5cclxuKi9cclxuLy8g0J/RgNC40LzQtdGAINGD0LrQsNC30LDQvdC40Y8g0YbQstC10YLQvtCyXHJcbiRidW5rZXI6ICMxMjE5MjA7XHJcbiRyYW5nb29uLWdyZWVuOiAjMWMxYzFjO1xyXG4kbWluZS1zaGFmdDogIzJmMmYyZjtcclxuJGdyYXk6ICM4MjgyODI7XHJcbiRzZWFzaGVsbDogI2YxZjFmMTtcclxuJHdoaXRlOiAjZmZmZmZmO1xyXG4kYm9uLWpvdXI6ICNlMWUxZTE7XHJcblxyXG4kZXF1YXRvcjogI2VlYmY2MztcclxuJGdlZWJ1bmc6ICNjZDkyMWU7XHJcbiRjb3JuZmxvd2VyOiAjOTBjMGU4O1xyXG4kZG93bnk6ICM2ZmMyYzU7XHJcbiRibHVlLWJheW91eDogIzQ4NjA3NDtcclxuJGNhc2FsOiAjMzg2MTYzO1xyXG5cclxuXHJcbiRjb2xvci10ZXh0OiAkbWluZS1zaGFmdDtcclxuJGNvbG9yLWJhY2tncm91bmQ6ICRzZWFzaGVsbDtcclxuXHJcbiRmb250LXdlaWdodC1yZWd1bGFyOiA0MDA7XHJcbiRmb250LXdlaWdodC1tZWRpdW06IDUwMDtcclxuJGZvbnQtd2VpZ2h0LWJvbGQ6IDcwMDtcclxuXHJcbiRmb250LXNpemUtdGl0bGUtbGFyaGU6IDQ4cHg7XHJcbiRmb250LXNpemUtdGl0bGUtYmlnOiAzNnB4O1xyXG4kZm9udC1zaXplLXRpdGxlLW5vcm1hbDogMzJweDtcclxuJGZvbnQtc2l6ZS10aXRsZS1zbWFsbDogMjRweDtcclxuXHJcbiRmb250LXNpemUtbm9ybWFsOiAxOHB4O1xyXG4kZm9udC1zaXplLXNtYWxsOiAxNnB4O1xyXG5cclxuLyoqXHJcbiogRm9udHNcclxuKi9cclxuJGZvbnQtc2l6ZS1iYXNlOiAxNnB4O1xyXG4kZm9udC1wYXRoOiAnL2Fzc2V0cy9mb250cy8nO1xyXG4kZm9udC1mYW1pbHktY3VzdG9tOiAncG9wcGlucyc7XHJcbiRmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LWN1c3RvbTtcclxuXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8qKlxyXG4qIEJyZWFrcG9pbnRzXHJcbiovXHJcbi8vINCf0YDQuNC80LXRgCDRg9C60LDQt9Cw0L3QuNGPINC80LXQtNC40LDQt9Cw0L/RgNC+0YHQvtCyLCDQt9Cw0YLQtdC8INC80L7QttC90L4g0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMINC10LUg0LrQsNC6ICdAbWVkaWEgI3skc2NyZWVuLW1lZGl1bX0gey4uLn0nXHJcbiRzY3JlZW4tZGVza3RvcDogJyhtaW4td2lkdGg6IDExNDBweCknO1xyXG4kc2NyZWVuLXRhYmxldDogJyhtaW4td2lkdGg6IDc2OHB4KSc7XHJcblxyXG4vKipcclxuKiBMYXlvdXRcclxuKi9cclxuJHdpZHRoLWNvbnRhaW5lcjogMTExMHB4O1xyXG4kZ2FwLWNvbnRhaW5lcjogMjBweDtcclxuXHJcblxyXG4vKipcclxuKiBTaXplc1xyXG4qL1xyXG4kaGVhZGVyLWhlaWdodC1tb2JpbGU6IDYwcHg7XHJcbiRoZWFkZXItaGVpZ2h0LWRlc2t0b3A6IDEwMHB4O1xyXG5cclxuXHJcbi8qKlxyXG4qIFRyYW5zaXRpb25zIGFuZCBBbmltYXRpb25zXHJcbiovXHJcblxyXG5cclxuXHJcbi8qKlxyXG4qIFJhZGl1c1xyXG4qL1xyXG4kYm9yZGVyLXJhZGl1cy10aW55OiAxMHB4O1xyXG4kYm9yZGVyLXJhZGl1cy1zbWFsbDogMjBweDtcclxuJGJvcmRlci1yYWRpdXMtYmlnOiAyNXB4O1xyXG4kYm9yZGVyLXJhZGl1cy1sYXJnZTogMzBweDtcclxuJGJvcmRlci1yYWRpdXMtaHVnZTogNDVweDtcclxuXHJcblxyXG4vKipcclxuKiBCb3gtc2hhZG93c1xyXG4qL1xyXG5cclxuXHJcblxyXG4vKipcclxuKiBaLWluZGV4ZXNcclxuKi9cclxuJHotaW5kZXgtaGVhZGVyOiA1MDtcclxuIiwiLy8g0J7QkdCp0JjQlT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgXHJcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgICY6OmJlZm9yZSxcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgfVxyXG59XHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XHJcbiAgICBmb250LXNpemU6IDEwMCU7XHJcblxyXG4gICAgY29sb3I6ICRjb2xvci10ZXh0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWJhY2tncm91bmQ7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgJGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1ub3JtYWw7XHJcblxyXG4gICAgLy8gZm9udC1zaXplOiByZW0oJGZvbnQtc2l6ZSk7XHJcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LXJlZ3VsYXI7XHJcblxyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmEge1xyXG4gICAgY29sb3I6ICRidW5rZXI7XHJcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtbm9ybWFsO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcblxyXG4gICAgJjphY3RpdmV7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG59XHJcblxyXG5saSB7XHJcbiAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIC8vIEBpbmNsdWRlIHRleHQtbWVkaXVtO1xyXG5cclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcblxyXG4gICAgJjpub3QoW2NsYXNzXSkge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgyMHB4KTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IHJlbSgyMHB4KTtcclxuXHJcbiAgICAgICAgJiBsaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMTVweCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgxMHB4KTtcclxuXHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiByZW0oMTBweCk7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNXB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1cHg7XHJcbiAgICAgICAgICAgICAgICAvLyBjb2xvcjogJGNlcmlzZS1yZWQ7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAZnVuY3Rpb24gcmVtKCRwaXhlbHMsICRjb250ZXh0OiAkZm9udC1zaXplLWJhc2UpIHtcclxuICAgIEBpZiAodW5pdGxlc3MoJHBpeGVscykpIHtcclxuICAgICAgICAkcGl4ZWxzOiAkcGl4ZWxzICogMXB4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgQGlmICh1bml0bGVzcygkY29udGV4dCkpIHtcclxuICAgICAgICAkY29udGV4dDogJGNvbnRleHQgKiAxcHg7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBAcmV0dXJuICRwaXhlbHMgLyAkY29udGV4dCAqIDFyZW07XHJcbn1cclxuICBcclxuQGZ1bmN0aW9uIGVtKCRwaXhlbHMsICRjb250ZXh0OiAkZm9udC1zaXplLWJhc2UpIHtcclxuICAgIEBpZiAodW5pdGxlc3MoJHBpeGVscykpIHtcclxuICAgICAgICAkcGl4ZWxzOiAkcGl4ZWxzICogMXB4O1xyXG4gICAgfVxyXG5cclxuICAgIEBpZiAodW5pdGxlc3MoJGNvbnRleHQpKSB7XHJcbiAgICAgICAgJGNvbnRleHQ6ICRjb250ZXh0ICogMXB4O1xyXG4gICAgfVxyXG5cclxuICAgIEByZXR1cm4gJHBpeGVscyAvICRjb250ZXh0ICogMWVtO1xyXG59XHJcbiIsIi5oZWFkZXJ7XHJcbiAgICBoZWlnaHQ6IHJlbSgkaGVhZGVyLWhlaWdodC1tb2JpbGUpO1xyXG5cclxuXHQmX19yb3cge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oJGhlYWRlci1oZWlnaHQtbW9iaWxlKTtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICBoZWlnaHQ6IHJlbSgkaGVhZGVyLWhlaWdodC1kZXNrdG9wKTtcclxuICAgICAgICB9ICAgICAgICBcclxuXHR9XHJcblxyXG5cdCZfX2NvbCB7XHJcblx0fVxyXG5cclxuXHQmX19jb2wtLWxvZ28ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAzO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHJlbSgyMHB4KTsgICAgICAgIFxyXG5cdH1cclxuXHJcblx0Jl9fY29sLS1tZW51IHtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdG9wOiAtMTAwJTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgICAgICBwYWRkaW5nOiA5MHB4IDIwcHggMjBweCAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRib24tam91cjtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfXtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB3aWR0aDogaW5pdGlhbDtcclxuICAgICAgICAgICAgaGVpZ2h0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWFzaGVsbDtcclxuICAgICAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB9IFxyXG5cclxuICAgICAgICAmLS1hY3RpdmV7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwcztcclxuICAgICAgICB9XHJcblx0fVxyXG5cclxuICAgICZfX2NvbC0tYnVyZ2Vye1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHotaW5kZXg6IDM7XHJcblxyXG4gICAgICAgICY6OmFmdGVyLFxyXG4gICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnVua2VyO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBzcGFue1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidW5rZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgdG9wOiA5cHg7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1hY3RpdmV7XHJcbiAgICAgICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgICAgICAgIHRvcDogOXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogOXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYgc3BhbntcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuXHJcblx0Jl9fbWVudSB7XHJcblx0fVxyXG5cclxuICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oJGhlYWRlci1oZWlnaHQtZGVza3RvcCk7XHJcbiAgICB9XHJcbn1cclxuIiwiLmZvb3RlciB7XHJcbiAgICBoZWlnaHQ6IHJlbSgyNTBweCk7XHJcblxyXG4gICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfXtcclxuICAgICAgICBoZWlnaHQ6IHJlbSgxNjRweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcm93IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiByZW0oMjUwcHgpO1xyXG5cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIGhlaWdodDogcmVtKDE2NHB4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sIHtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMHB4ICgzMHB4KSAwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfXtcclxuICAgICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpe1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogcmVtKDIwcHgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbC0tbG9nbyB7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sLS1zb2NpYWwge1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbC0tYmFjayB7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIi5jb250YWluZXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogcmVtKCR3aWR0aC1jb250YWluZXIgKyAyICogJGdhcC1jb250YWluZXIpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiByZW0oJGdhcC1jb250YWluZXIpO1xyXG4gICAgcGFkZGluZy1sZWZ0OiByZW0oJGdhcC1jb250YWluZXIpO1xyXG59IiwiLmNvbnRlbnR7XHJcblxyXG4gICAgJl9fcHJvZmlsZXtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgxMzNweCk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2luZm97XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIHBhZGRpbmc6IHJlbSg2M3B4KSByZW0oNjVweCk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDEwMHB4KTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiByZW0oJGJvcmRlci1yYWRpdXMtaHVnZSk7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI0U5RTlFOTtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9e1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucGFnZXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG5cclxuICAgICZfX2hlYWRlcntcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgei1pbmRleDogJHotaW5kZXgtaGVhZGVyO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG5cclxuICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlYXNoZWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcblxyXG4gICAgICAgIHBhZGRpbmctdG9wOiByZW0oMTBweCk7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogcmVtKCRoZWFkZXItaGVpZ2h0LW1vYmlsZSk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fXtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IHJlbSgyMHB4KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiByZW0oNDJweCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IHJlbSgkaGVhZGVyLWhlaWdodC1kZXNrdG9wKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fZm9vdGVye1xyXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgfVxyXG59IiwiLmxvZ28ge1xyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjJweCk7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IHJlbSgzM3B4KTtcclxuXHJcbiAgICAgICAgJi0tdGl0bGV7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDM2cHgpO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogcmVtKDQ2cHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5tZW51IHtcclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBtYXJnaW46IDBweCAwcHggcmVtKDQwcHgpIDBweDtcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweCAwcHggMHB4IHJlbSg0MHB4KTsgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1hY3RpdmV7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZXF1YXRvcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgb3BhY2l0eTogLjY7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmljb25ze1xyXG4gICAgJl9fbGlzdHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbXtcclxuICAgICAgICBtYXJnaW46IHJlbSgxMHB4KSByZW0oMTBweCkgMHB4IHJlbSgxMHB4KTtcclxuICAgIH1cclxufSIsIi5pY29ue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgJi0td2hpdGV7XHJcbiAgICAgICAgZmlsbDogJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWJsYWNre1xyXG4gICAgICAgIGZpbGw6ICRtaW5lLXNoYWZ0O1xyXG4gICAgfVxyXG59IiwiLnNvY2lhbCB7XHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcGlje1xyXG4gICAgICAgIGZpbGw6ICM2NzY3Njc7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbSB7ICAgICAgICBcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzO1xyXG5cclxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCByZW0oMjVweCkgMHB4IDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC42O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogcmVtKDMycHgpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKDMycHgpO1xyXG4gICAgfVxyXG59XHJcbiIsIi5oZWFkaW5ne1xyXG4gICAgbWFyZ2luOiAwO1xyXG5cclxuICAgICYtLWh1Z2V7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBmb250LXNpemU6IDQ4cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDYycHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tbGFyZ2V7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDQ2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tYmlne1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogNDVweDtcclxuICAgIH1cclxuXHJcbiAgICAmLS1ub3JtYWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLWdyYXl7XHJcbiAgICAgICAgY29sb3I6ICRncmF5O1xyXG4gICAgfVxyXG59IiwiLmJ1dHRvbnN7XHJcbiAgICAmX19saXN0e1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9XHJcbiAgICAmX19pdGVte1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDIwcHgpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgyMHB4KTtcclxuICAgIH1cclxufSIsIi5idXR0b257XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICBcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICBtaW4td2lkdGg6IDA7XHJcblxyXG4gICAgcGFkZGluZzogcmVtKDE2cHgpIHJlbSgzM3B4KTtcclxuXHJcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy10aW55O1xyXG5cclxuICAgIGNvbG9yOiAkd2hpdGU7XHJcblxyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwcztcclxuXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgJi0tZmlsbHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXF1YXRvcjsgICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgICYtLWJvcmRlcntcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tc2ltcGxle1xyXG4gICAgICAgIGNvbG9yOiAkbWluZS1zaGFmdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGVxdWF0b3I7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tY292ZXJ7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgY29sb3I6ICRtaW5lLXNoYWZ0O1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBvcGFjaXR5OiAuNjtcclxuICAgIH1cclxuXHJcbiAgICAmX19pY29ue1xyXG4gICAgICAgICRzaXplOiAyNXB4O1xyXG4gICAgICAgICRpY29uLW1hcmdpbjogMTZweDtcclxuXHJcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcblxyXG4gICAgICAgIHdpZHRoOiByZW0oJHNpemUpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKCRzaXplKTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgkaWNvbi1tYXJnaW4pO1xyXG5cclxuICAgICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLXJpZ2h0e1xyXG4gICAgICAgICAgICBvcmRlcjogMTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKCRpY29uLW1hcmdpbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmZvcm17XHJcbiAgICBmb250LXNpemU6IHJlbSgkZm9udC1zaXplLW5vcm1hbCk7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAmX19yb3d7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IHJlbSgzMHB4KTtcclxuXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ZpZWxkLWJsb2NrIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogcmVtKDNweCk7XHJcbiAgICB9XHJcbn0iLCIuaW5wdXR7XHJcbiAgICAkaGVpZ2h0LWlucHV0OiA2MHB4O1xyXG4gICAgJGhlaWdodC1pbnB1dC1zbWFsbDogNDBweDtcclxuXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJl9fY29udHJvbHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgkZm9udC1zaXplLW5vcm1hbCk7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IHJlbSgzMHB4KTtcclxuXHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogcmVtKCRoZWlnaHQtaW5wdXQpO1xyXG5cclxuICAgICAgICBwYWRkaW5nOiAwcHggcmVtKDMwcHgpO1xyXG5cclxuICAgICAgICBjb2xvcjogJGdyYXk7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtdGlueTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG5cclxuICAgICAgICAmOmZvY3Vze1xyXG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IHJlbSgxcHgpIHNvbGlkICRncmF5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJi0tdGV4dGFyZWEgJntcclxuICAgICAgICAmX19jb250cm9se1xyXG4gICAgICAgICAgICBoZWlnaHQ6IHJlbSgxMjBweCk7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgxNnB4KSByZW0oMzBweCk7XHJcblxyXG4gICAgICAgICAgICByZXNpemU6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTtcclxuXHJcbiAgICAgICAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFye1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5jYXJkc3tcclxuXHJcbiAgICAmX19saXN0e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICBtYXJnaW4tdG9wOiByZW0oLTIwcHgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKC01cHgpO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oLTVweCk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fXtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oLTE1cHgpO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKC0xNXB4KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IHJlbSgtMzBweCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogcmVtKC0yNXB4KTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IHJlbSgtMjVweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW17XHJcbiAgICAgICAgbWFyZ2luLXRvcDogcmVtKDIwcHgpO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiBwZXJjZW50YWdlKDEgLyAyKTtcclxuXHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oNXB4KTtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oNXB4KTtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9e1xyXG4gICAgICAgICAgICB3aWR0aDogcGVyY2VudGFnZSgxIC8gMyk7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogcmVtKDE1cHgpO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oMTVweCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICB3aWR0aDogcGVyY2VudGFnZSgxIC8gNCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IHJlbSgzMHB4KTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiByZW0oMjVweCk7XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IHJlbSgyNXB4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuY2FyZHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAmX19pbWFnZXtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDI3cHgpO1xyXG5cclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1odWdlO1xyXG5cclxuICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcblxyXG4gICAgICAgICAgICAkY2FyZC13aWR0aDogMjM5cHg7XHJcbiAgICAgICAgICAgICRjYXJkLWhlaWdodDogMzEzcHg7XHJcblxyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IHBlcmNlbnRhZ2UoJGNhcmQtaGVpZ2h0IC8gJGNhcmQtd2lkdGgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1waWN7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG5cclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3ZlclwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ib3h7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib2R5e1xyXG4gICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZXtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMzZweDtcclxuXHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IHJlbSg3cHgpO1xyXG4gICAgfVxyXG59IiwiLmJpZ2NhcmRze1xyXG5cclxuICAgICZfX2xpc3R7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcblxyXG4gICAgICAgIG1hcmdpbi10b3A6IHJlbSgyMHB4KTtcclxuXHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oLTE1cHgpO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oLTE1cHgpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW17XHJcbiAgICAgICAgbWFyZ2luLXRvcDogcmVtKDIwcHgpO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IHJlbSgxNXB4KTtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oMTVweCk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIHdpZHRoOiBwZXJjZW50YWdlKDEgLyAyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuYmlnY2FyZHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSgxMDBweCk7XHJcblxyXG4gICAgJl9faW1hZ2V7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgyN3B4KTtcclxuXHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtYmlnO1xyXG5cclxuICAgICAgICAmLW1pbntcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogcmVtKDM4MHB4KTtcclxuXHJcbiAgICAgICAgICAgICYgaW1ne1xyXG4gICAgICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBib3R0b207XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuXHJcbiAgICAgICAgICAgICRjYXJkLXdpZHRoOiAyMzlweDtcclxuICAgICAgICAgICAgJGNhcmQtaGVpZ2h0OiAzMTNweDtcclxuXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogcGVyY2VudGFnZSgkY2FyZC1oZWlnaHQgLyAkY2FyZC13aWR0aCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLXBpY3tcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2JveHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG5cclxuXHQmX19ib2R5IHtcclxuXHR9XHJcblxyXG5cdCZfX3RpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMzZweDtcclxuXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDEwcHgpO1xyXG5cdH1cclxuXHJcblx0Jl9fdGV4dCB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcblxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHR9XHJcblxyXG5cdCZfX2luZm8ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpe1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg1MHB4KTtcclxuICAgICAgICB9XHJcblx0fVxyXG5cclxuXHQmX19pY29uIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxM3B4KTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICYtcGlje1xyXG4gICAgICAgICAgICB3aWR0aDogcmVtKDE4cHgpO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IHJlbSgxOHB4KTtcclxuICAgICAgICB9XHJcblx0fVxyXG59XHJcbiIsIi50YWJze1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwcztcclxuXHJcbiAgICAmX19saXN0e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVte1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKCRmb250LXNpemUtdGl0bGUtbm9ybWFsKTtcclxuICAgICAgICBsaW5lLWhlaWdodDogcmVtKDU0cHgpO1xyXG5cclxuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oNTBweCk7XHJcblxyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UgMHM7XHJcblxyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgY29sb3I6ICRncmF5O1xyXG5cclxuICAgICAgICAmLS1hY3RpdmV7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZXF1YXRvcjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZSAwcztcclxuXHJcbiAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiByZW0oLTEycHgpO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiByZW0oMnB4KTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG5cclxuICAgICAgICAgICAgICAgIGJvcmRlcjogNHB4IHNvbGlkICNFRUJGNjM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiArICYge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKDgwcHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ibG9ja3tcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgICAgICAmLS1hY3RpdmV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5wcm9qZWN0e1xyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IHJlbSg0MHB4KTtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogcmVtKDUwcHgpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RhYnN7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IHJlbSg1MHB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmX19tYWlse1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgcGFkZGluZzogcmVtKDUwcHgpIHJlbSg3NXB4KTtcclxuICAgICAgICBcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFRUJGNjM7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0bGV7XHJcbiAgICAgICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDYycHg7XHJcblxyXG4gICAgICAgIG1heC13aWR0aDogcmVtKDQ3MHB4KTtcclxuXHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxufSIsIi5wcm9maWxle1xyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZsZXg6IDEgMSAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgb3JkZXI6IDE7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBzdGFydDtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiByZW0oNTQwcHgpO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiByZW0oODBweCk7XHJcbiAgICAgICAgICAgIG9yZGVyOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19pbWFnZXtcclxuICAgICAgICAmLXBpY3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiByZW0oNTUzcHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZXtcclxuICAgICAgICBwYWRkaW5nOiByZW0oMTBweCkgMHB4IHJlbSgzMnB4KSAwcHg7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IHJlbSgxNnB4KSAwcHggcmVtKDU2cHgpIDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fZm9sbG93e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogcmVtKDMzcHgpO1xyXG5cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi1kZXNrdG9wfXtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMzBweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ljb257XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIHdpZHRoOiAzMnB4O1xyXG4gICAgICAgIGZpbGw6ICRncmF5O1xyXG5cclxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDMwcHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19idXR0b257XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IHJlbSgyMHB4KTtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9e1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnRue1xyXG5cclxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgzMHB4KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fXtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpe1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMzBweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tb3Jhbmdle1xyXG4gICAgICAgIGNvbG9yOiAkZXF1YXRvcjtcclxuICAgIH1cclxufSIsIi5yaW5ncyB7XHJcblxyXG4gICAgJl9fY29udGVudCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9e1xyXG4gICAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCl7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg0OXB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19udW1iZXIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNzJweDtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA2MnB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIGNvbG9yOiAjODI4MjgyO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWJsdWV7XHJcbiAgICAgICAgY29sb3I6ICM4RUQyQTk7XHJcbiAgICB9XHJcbn1cclxuIiwiLmluZm8ge1xyXG5cclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogcmVtKCRib3JkZXItcmFkaXVzLWxhcmdlKTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMzBweCk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tdGFibGV0fXtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oNjBweCk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLXBpY3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiByZW0oMzUwcHgpO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IHJlbSgyNTBweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLXRhYmxldH17XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgI3skc2NyZWVuLWRlc2t0b3B9e1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDU3MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZXtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTlweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcmluZ3Mge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSgzMHB4KTtcclxuXHJcbiAgICAgICAgQG1lZGlhICN7JHNjcmVlbi10YWJsZXR9e1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAjeyRzY3JlZW4tZGVza3RvcH17XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IHJlbSg3MHB4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ== */