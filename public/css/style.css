html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:poppins;font-weight:400;font-style:normal;src:url(/assets/fonts/poppins-regular.woff) format("woff"),url(/assets/fonts/poppins-regular.woff2) format("woff2")}@font-face{font-family:poppins;font-weight:700;font-style:normal;src:url(/assets/fonts/poppins-bold.woff) format("woff"),url(/assets/fonts/poppins-bold.woff2) format("woff2")}@font-face{font-family:poppins;font-weight:500;font-style:normal;src:url(/assets/fonts/poppins-medium.woff) format("woff"),url(/assets/fonts/poppins-medium.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:poppins;font-size:100%;color:#121920;background-color:#f1f1f1}body{font-weight:400;padding:0;margin:0;text-rendering:optimizeLegibility}a{color:#121920;font-size:18px;text-decoration:none}a:active,a:hover{text-decoration:underline}a:active{opacity:.5}li{display:list-item}ul{margin-top:0;margin-bottom:0;list-style:none;padding:0}ul:not([class]){margin-bottom:1.25rem;padding-left:1.25rem}ul:not([class]) li{position:relative;padding-left:.9375rem;margin-bottom:.625rem}ul:not([class]) li:before{content:"";position:absolute;top:.625rem;left:0;display:block;width:5px;height:5px;border-radius:50%;background-color:currentColor}.header,.header__row{height:3.75rem}.header__row{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-direction:row;flex-direction:row}@media (min-width:1140px){.header__row{height:6.25rem}}.header__col--logo{position:relative;z-index:3;padding-right:1.25rem}.header__col--menu{position:fixed;top:-100%;left:0;width:100%;height:100%;overflow:auto;padding:90px 20px 20px;background-color:#e1e1e1}@media (min-width:1140px){.header__col--menu{position:relative;width:auto;height:auto;top:0;transition:none;background-color:#f1f1f1;z-index:2;padding:0}}.header__col--menu--active{top:0;transition:all .5s ease 0s}.header__col--burger{display:block;position:relative;width:30px;height:20px;cursor:pointer;z-index:3}.header__col--burger:after,.header__col--burger:before{position:absolute;width:100%;height:2px;left:0;content:"";background-color:#121920;transition:all .5s ease 0s}.header__col--burger:before{top:0}.header__col--burger:after{bottom:0}.header__col--burger span{position:absolute;background-color:#121920;width:100%;height:2px;top:9px;transition:all .5s ease 0s}.header__col--burger--active:before{transform:rotate(45deg);top:9px}.header__col--burger--active:after{transform:rotate(-45deg);bottom:9px}.header__col--burger--active span{transform:scale(0)}@media (min-width:1140px){.header__col--burger{display:none}}@media (min-width:1140px){.header{height:6.25rem}}.footer{height:15.625rem}@media (min-width:1140px){.footer{height:10.25rem}}.footer__row{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;text-align:center;-ms-flex-align:center;align-items:center;height:15.625rem}@media (min-width:1140px){.footer__row{-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;height:10.25rem}}.footer__col{padding:0 0 30px}@media (min-width:1140px){.footer__col:not(:last-child){padding-right:1.25rem}}.container{width:100%;max-width:71.875rem;margin-right:auto;margin-left:auto;padding-right:1.25rem;padding-left:1.25rem}.page{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.page__header{position:fixed;z-index:50;top:0;right:0;left:0;-ms-flex-negative:0;flex-shrink:0}.page__header:before{position:absolute;top:0;left:0;content:"";width:100%;height:100%;z-index:2;background-color:#f1f1f1}.page__content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-positive:1;flex-grow:1;padding-top:1.375rem;margin-top:3.75rem}@media (min-width:768px){.page__content{padding-top:2rem;margin-top:6.25rem}}@media (min-width:1140px){.page__content{padding-top:2.625rem}}.page__footer{-ms-flex-negative:0;flex-shrink:0}.logo__link{font-weight:700;font-size:1.375rem;line-height:2.0625rem}.logo__link--title{font-weight:500;font-size:2.25rem;line-height:2.875rem}.menu__list{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:1140px){.menu__list{-ms-flex-direction:row;flex-direction:row}}.menu__item{margin:0 0 2.5rem}@media (min-width:1140px){.menu__item{margin:0 0 0 2.5rem}}.menu__link{font-weight:500;font-size:36px;line-height:24px;transition:all .5s ease 0s}@media (min-width:1140px){.menu__link{font-weight:500;font-size:16px;line-height:24px}}.menu__link--active{color:#eebf63}.menu__link:hover{text-decoration:none;opacity:.6;transition:all .5s ease 0s}.back__item{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;transition:all .5s ease 0s}.back__link{font-weight:500;font-size:24px;line-height:36px;display:block;width:10.75rem;height:2rem}.icon{width:100%;height:100%}.social__list{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}.social__pic{fill:#676767}.social__item{transition:all .5s ease 0s}.social__item:not(:last-child){padding:0 1.5625rem 0 0}.social__item:hover{opacity:.6}.social__link{display:block;width:2rem;height:2rem}
/*# sourceMappingURL=data:application/json;base64, */